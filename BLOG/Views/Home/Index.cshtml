<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Ana Sayfa</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-image: url('/images/BLOG.jpeg');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
        }

        .page-title {
            font-size: 85px;
            font-weight: bold;
            color: black;
            position: fixed;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            margin: 0;
            text-align: center;
            background-color: rgba(44, 171, 128, 0.8);
            width: 100%;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        .container {
            max-width: 1200px;
            width: 100%;
            margin-top: 200px;
            padding: 20px;
            background-color: rgba(164, 217, 189, 0.8);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            flex: 1;
        }

        .post-area {
            width: 100%;
            margin-top: -200px;
            margin-bottom: 20px;
        }

        .post-box {
            width: 100%;
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            resize: none;
            font-size: 16px;
        }

            .post-box:focus {
                outline: none;
                border-color: #007bff;
            }

        .post-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 10px;
        }

            .post-footer input[type="file"] {
                display: none;
            }

            .post-footer label {
                cursor: pointer;
                color: black;
            }

            .post-footer button {
                background-color: black;
                color: #fff;
                padding: 8px 16px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }

                .post-footer button:hover {
                    background-color: #0056b3;
                }

        .post {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: #f9f9f9;
            position: relative;
        }

            .post img {
                max-width: 100%;
                height: auto;
                margin-top: 10px;
                border-radius: 4px;
            }

        .post-time {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 12px;
            color: #888;
        }

        .message-area {
            width: 320px;
            height: 500px;
            padding: 10px;
            background-color: rgba(164, 217, 189, 0.8);
            border: 1px solid #ddd;
            border-radius: 4px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: fixed;
            right: 20px;
            top: 20px;
            display: flex;
            flex-direction: column;
            margin-top: 180px;
        }

        .message-box {
            flex: 1;
            overflow-y: auto;
            margin-bottom: 10px;
        }

            .message-box p {
                margin: 0;
                padding: 5px;
                border-bottom: 1px solid #ddd;
                overflow-wrap: break-word;
                word-break: break-word;
            }

        .message-input {
            display: flex;
            margin-top: auto;
        }

            .message-input input {
                flex: 1;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                font-size: 16px;
            }

            .message-input button {
                background-color: black;
                color: #fff;
                padding: 10px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                margin-left: 10px;
            }

                .message-input button:hover {
                    background-color: #0056b3;
                }

        .image-preview {
            display: none;
            margin-top: 10px;
        }

            .image-preview img {
                max-width: 100%;
                border: 1px solid #ddd;
                border-radius: 4px;
                cursor: pointer;
            }

        .search-area {
            width: 250px;
            padding: 10px;
            background-color: rgba(164, 217, 189, 0.8);
            border: 1px solid #ddd;
            border-radius: 4px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: fixed;
            left: 20px;
            top: 20px;
            margin-top: 180px;
        }

        .search-box {
            display: flex;
            margin-bottom: 10px;
        }

            .search-box input {
                flex: 1;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }

        .hashtag-list {
            max-height: 200px;
            overflow-y: auto;
            padding: 0;
            list-style-type: none;
            margin: 0;
        }

            .hashtag-list li {
                padding: 5px;
                border-bottom: 1px solid #ddd;
                cursor: pointer;
            }

                .hashtag-list li:hover {
                    background-color: #e0e0e0;
                }
    </style>
</head>

<body>
    <h1 class="page-title">THOUGHTER</h1>
    <div class="container">
        <div class="post-area">
            <textarea class="post-box" id="postText" placeholder="Bir şeyler yaz..." rows="5"></textarea>
            <div class="post-footer">
                <label for="file-upload">Fotoğraf Ekle</label>
                <input type="file" id="file-upload">
                <button id="postButton">Paylaş</button>
            </div>
            <div class="image-preview" id="imagePreview">
                <img id="previewImage" alt="Önizleme Fotoğrafı">
            </div>
        </div>

        <div id="postsContainer">
            <!-- Postlar buraya eklenecek -->
        </div>
    </div>

    <div class="message-area">
        <div class="message-box" id="messageBox">
            <!-- Mesajlar buraya eklenecek -->
        </div>
        <div class="message-input">
            <input type="text" id="messageInput" placeholder="Mesaj yazın...">
            <button id="sendMessageButton">Gönder</button>
        </div>
    </div>

    <div class="search-area">
        <div class="search-box">
            <input type="text" id="searchInput" placeholder="Kategorilerde Ara...">
        </div>
        <ul class="hashtag-list" id="hashtagList">
            <!-- Hashtagler buraya eklenecek -->
        </ul>
    </div>

    <script>
        const hashtagList = [];
        const maxWidth = 400; // Maksimum genişlik
        const maxHeight = 300; // Maksimum yükseklik

        document.getElementById("file-upload").addEventListener("change", function () {
            const file = this.files[0];
            const imagePreview = document.getElementById("imagePreview");
            const previewImage = document.getElementById("previewImage");

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = new Image();
                    img.src = e.target.result;
                    img.onload = function () {
                        const canvas = document.createElement("canvas");
                        const ctx = canvas.getContext("2d");

                        let width = img.width;
                        let height = img.height;

                        // Fotoğraf boyutlandırma
                        if (width > maxWidth) {
                            height *= maxWidth / width;
                            width = maxWidth;
                        }

                        if (height > maxHeight) {
                            width *= maxHeight / height;
                            height = maxHeight;
                        }

                        canvas.width = width;
                        canvas.height = height;
                        ctx.drawImage(img, 0, 0, width, height);
                        previewImage.src = canvas.toDataURL("image/jpeg");

                        imagePreview.style.display = 'block';
                    };
                };

                reader.readAsDataURL(file);
            } else {
                imagePreview.style.display = 'none';
            }
        });

        document.getElementById("previewImage").addEventListener("click", function () {
            const fileInput = document.getElementById("file-upload");
            const imagePreview = document.getElementById("imagePreview");

            fileInput.value = "";
            imagePreview.style.display = 'none';
        });

        document.getElementById("postButton").addEventListener("click", function () {
            const postText = document.getElementById("postText").value;
            const fileInput = document.getElementById("file-upload");
            const postsContainer = document.getElementById("postsContainer");

            if (postText.trim() !== "") {
                const newPost = document.createElement("div");
                newPost.classList.add("post");

                const postContent = document.createElement("p");
                postContent.textContent = postText;
                newPost.appendChild(postContent);

                // Hashtagleri tespit et ve listeye ekle
                const hashtags = postText.match(/#[\wçöşğüıİÇÖŞĞÜ]+/g);
                if (hashtags) {
                    hashtags.forEach(tag => {
                        if (!hashtagList.includes(tag)) {
                            hashtagList.push(tag);
                            const newTag = document.createElement("li");
                            newTag.textContent = tag;
                            newTag.addEventListener("click", function () {
                                filterPostsByHashtag(tag);
                            });
                            document.getElementById("hashtagList").appendChild(newTag);
                        }
                    });
                }

                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const img = new Image();
                        img.src = e.target.result;
                        img.onload = function () {
                            const canvas = document.createElement("canvas");
                            const ctx = canvas.getContext("2d");

                            let width = img.width;
                            let height = img.height;

                            // Fotoğraf boyutlandırma
                            if (width > maxWidth) {
                                height *= maxWidth / width;
                                width = maxWidth;
                            }

                            if (height > maxHeight) {
                                width *= maxHeight / height;
                                height = maxHeight;
                            }

                            canvas.width = width;
                            canvas.height = height;
                            ctx.drawImage(img, 0, 0, width, height);
                            const resizedImageURL = canvas.toDataURL("image/jpeg");

                            const postImage = document.createElement("img");
                            postImage.src = resizedImageURL;
                            postImage.alt = "Paylaşım Fotoğrafı";
                            newPost.appendChild(postImage);
                        };
                    };

                    reader.readAsDataURL(file);
                }

                const postTime = document.createElement("div");
                postTime.classList.add("post-time");
                postTime.textContent = new Date().toLocaleString();
                newPost.appendChild(postTime);

                // Yeni postu en üste ekle
                postsContainer.insertBefore(newPost, postsContainer.firstChild);

                document.getElementById("postText").value = "";
                fileInput.value = "";
                document.getElementById("imagePreview").style.display = 'none';
            } else {
                alert("Lütfen bir şeyler yazın.");
            }
        });


        document.getElementById("sendMessageButton").addEventListener("click", function () {
            const messageInput = document.getElementById("messageInput");
            const messageBox = document.getElementById("messageBox");

            if (messageInput.value.trim() !== "") {
                const newMessage = document.createElement("p");
                newMessage.textContent = messageInput.value;
                messageBox.appendChild(newMessage);
                messageInput.value = "";
                messageBox.scrollTop = messageBox.scrollHeight;
            } else {
                alert("Lütfen bir mesaj yazın.");
            }
        });

        // Enter tuşuna basıldığında mesajı gönder
        document.getElementById("messageInput").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                document.getElementById("sendMessageButton").click();
            }
        });

        document.getElementById("searchInput").addEventListener("input", function () {
            const filter = this.value.toLowerCase();
            const hashtags = document.querySelectorAll("#hashtagList li");

            hashtags.forEach(function (tag) {
                if (tag.textContent.toLowerCase().includes(filter)) {
                    tag.style.display = "";
                } else {
                    tag.style.display = "none";
                }
            });
        });

        function filterPostsByHashtag(hashtag) {
            const posts = document.querySelectorAll("#postsContainer .post");
            posts.forEach(post => {
                const postText = post.querySelector("p").textContent;
                if (postText.includes(hashtag)) {
                    post.style.display = "";
                } else {
                    post.style.display = "none";
                }
            });
        }
    </script>
</body>

</html>
